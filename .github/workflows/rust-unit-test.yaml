name: (Rust) Unit tests

on:
  pull_request:
    paths:
      - "packages/rust/**"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run tests on"
        required: true
        default: "main"
      package:
        description: "Rust package to test (leave empty to test all)"
        required: false
        default: ""

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.event.inputs.branch || github.head_ref || github.ref }}

      - name: Display directory structure
        run: tree -L 2 packages

      - name: Determine packages to test
        id: get-packages
        run: |
          # Get all packages that have been modified
          if [ "${{ github.event.inputs.package }}" == "" ]; then
            echo "Determining packages to test based on changes."
            packages=$(git diff --name-only HEAD~1 | grep '^packages/rust/' | cut -d'/' -f3 | sort -u | tr '\n' ' ')
          else
            packages=${{ github.event.inputs.package }}
          fi
          echo "Package list: $packages"
          echo "packages=$packages" >> $GITHUB_OUTPUT

      - name: Run tests for rust packages
        run: |
          packages="${{ steps.get-packages.outputs.packages }}"

          if [ ! -z "$packages" ]; then

            echo "Packages to test: $packages"

            for package in $packages; do
              echo "Running tests for package: $package"
              (cd packages/rust/$package && cargo test --quiet)
            done
            
          else
            echo "No packages to test."
          fi
