name: (Rust) Unit tests

on:
  push:
    paths:
      - "packages/rust/**"
  pull_request:
    paths:
      - "packages/rust/**"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run tests on"
        required: true
        default: "main"
      package:
        description: "Rust package to test (leave empty to test all)"
        required: false
        default: ""

jobs:

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch || github.head_ref || github.ref }}

      - name: Display directory structure
        run: tree -L 2 packages

      - name: Determine packages to test
        id: get-packages
        run: |
          # Get all Rust packages if no specific package is specified
          if [ "${{ github.event.inputs.package }}" == "" ]; then
            echo "All packages will be tested."
            packages=$(ls packages/rust)
          else
            packages=${{ github.event.inputs.package }}
          fi
          packages=$(echo $packages | jq -R -c 'split(" ")')
          echo "Packages to test: $packages"
          echo "packages=$packages" >> $GITHUB_OUTPUT

      - name: Run tests for rust packages
        run: |
          # Retrieve output packages and parse them using jq
          packages="${{ steps.get-packages.outputs.packages }}"
          echo "Packages to test: $packages"

          # Convert JSON array string into a bash array using jq
          for package in $(echo $packages | jq -r '.[]'); do
            echo "Running tests for package: $package"
            (cd packages/rust/$package && cargo test --verbose)
          done
