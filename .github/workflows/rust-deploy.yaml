name: (Rust) Deploy

on:
  pull_request:
    types:
      - closed  # Execute only when the PR is closed
    branches:
      - main    # Only for the main branch
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch from which to deploy"
        required: true
        default: "main"
      package:
        description: "Packages to deploy (empty for all)"
        required: false
        default: ""

jobs:
  deploy:
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch || github.head_ref || github.ref }}

      - name: Display directory structure
        run: tree -L 2 packages

      - name: Determine packages to deploy
        id: get-packages
        run: |
          # Get all packages that have been modified
          if [ "${{ github.event.inputs.package }}" == "" ]; then
            echo "Determining packages to deploy"

            # Packages with Dockerfile in them
            packages=$(find packages/rust -name Dockerfile | grep '^packages/rust/' | cut -d'/' -f3 | sort -u | tr '\n' ' ')
          else
            packages=${{ github.event.inputs.package }}
          fi
          echo -e ">> Package to deploy: \033[0;36m$packages\033[0m"
          echo "packages=$packages" >> $GITHUB_OUTPUT

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SCW_SSH_PRIVATE_KEY }}
          SCW_HOST: ${{ vars.SCW_PUBLIC_DNS }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          cat ~/.ssh/id_ed25519
          ssh-keyscan -H ${SCW_HOST} >> ~/.ssh/known_hosts

          ssh -v root@${SCW_HOST} "docker pull ${IMAGE_NAME}"

      # - name: Deploy
      #   id: deploy-packages
      #   env:
      #     SCW_HOST: ${{ vars.SCW_PUBLIC_DNS }}
      #   run: |
      #     packages="${{ steps.get-packages.outputs.packages }}"

      #     if [ ! -z "$packages" ]; then
      #       echo "Deploying packages: $packages"
      #       for package in $packages; do

      #         # Get version from Cargo.toml
      #         version=$(grep '^version' packages/rust/$package/Cargo.toml | cut -d '"' -f 2)
      #         IMAGE_NAME=ghcr.io/xhermosilla/${package}:${version}

      #         echo -e "\033[0;36m>> Deploying docker image: ${IMAGE_NAME}\033[0m"
      #         echo -e "\033[0;36m-------------------------------------------------------------------------------\033[0m"

      #         ssh root@${SCW_HOST} "docker pull ${IMAGE_NAME}"

      #       done
      #     else
      #       echo "No packages to deploy"
      #     fi